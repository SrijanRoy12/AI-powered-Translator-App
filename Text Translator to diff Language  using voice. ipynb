{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMyU9QE9ktNH1kLqPlIMXGe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install googletrans==4.0.0-rc1\n","!pip install gTTS\n","!pip install IPython\n","\n","from googletrans import Translator\n","from gtts import gTTS\n","from IPython.display import Audio, display\n","import os\n","\n","# Initialize the translator\n","translator = Translator()\n","\n","def translate_text(text, dest_language='en'):\n","    \"\"\"Translate text to target language\"\"\"\n","    if not text:\n","        return None\n","    translation = translator.translate(text, dest=dest_language)\n","    print(f\"Translation: {translation.text}\")\n","    return translation.text\n","\n","def text_to_speech(text, language='en'):\n","    \"\"\"Convert text to speech and play it\"\"\"\n","    if not text:\n","        return\n","    tts = gTTS(text=text, lang=language, slow=False)\n","    tts.save(\"translation.mp3\")\n","    display(Audio(\"translation.mp3\", autoplay=True))\n","    # Clean up\n","    if os.path.exists(\"translation.mp3\"):\n","        os.remove(\"translation.mp3\")\n","\n","# Available languages with their codes\n","languages = {\n","    'en': 'English',\n","    'es': 'Spanish',\n","    'fr': 'French',\n","    'de': 'German',\n","    'it': 'Italian',\n","    'pt': 'Portuguese',\n","    'ru': 'Russian',\n","    'zh-cn': 'Chinese (Simplified)',\n","    'ja': 'Japanese',\n","    'ar': 'Arabic',\n","    'hi': 'Hindi'\n","}\n","\n","# Display language options\n","print(\"Available target languages:\")\n","for code, name in languages.items():\n","    print(f\"{code}: {name}\")\n","\n","# Get user input for target language\n","target_lang = input(\"Enter target language code (default is 'en' for English): \").strip().lower()\n","if not target_lang or target_lang not in languages:\n","    target_lang = 'en'\n","    print(\"Defaulting to English\")\n","\n","while True:\n","    print(\"\\nType 'quit' to exit\")\n","    text = input(\"Enter text to translate: \")\n","\n","    if text.lower() == 'quit':\n","        break\n","\n","    # Translate text\n","    translated_text = translate_text(text, dest_language=target_lang)\n","    if not translated_text:\n","        continue\n","\n","    # Speak the translation\n","    text_to_speech(translated_text, language=target_lang)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"1XqzW1oH60XB","executionInfo":{"status":"error","timestamp":1750953026996,"user_tz":-330,"elapsed":57666,"user":{"displayName":"Srijan Roy","userId":"15062122145989637074"}},"outputId":"d1aad34f-644e-4c80-f108-25221cc76977"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: googletrans==4.0.0-rc1 in /usr/local/lib/python3.11/dist-packages (4.0.0rc1)\n","Requirement already satisfied: httpx==0.13.3 in /usr/local/lib/python3.11/dist-packages (from googletrans==4.0.0-rc1) (0.13.3)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.11/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (2025.6.15)\n","Requirement already satisfied: hstspreload in /usr/local/lib/python3.11/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (2025.1.1)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.11/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (1.3.1)\n","Requirement already satisfied: chardet==3.* in /usr/local/lib/python3.11/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (3.0.4)\n","Requirement already satisfied: idna==2.* in /usr/local/lib/python3.11/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (2.10)\n","Requirement already satisfied: rfc3986<2,>=1.3 in /usr/local/lib/python3.11/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (1.5.0)\n","Requirement already satisfied: httpcore==0.9.* in /usr/local/lib/python3.11/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (0.9.1)\n","Requirement already satisfied: h11<0.10,>=0.8 in /usr/local/lib/python3.11/dist-packages (from httpcore==0.9.*->httpx==0.13.3->googletrans==4.0.0-rc1) (0.9.0)\n","Requirement already satisfied: h2==3.* in /usr/local/lib/python3.11/dist-packages (from httpcore==0.9.*->httpx==0.13.3->googletrans==4.0.0-rc1) (3.2.0)\n","Requirement already satisfied: hyperframe<6,>=5.2.0 in /usr/local/lib/python3.11/dist-packages (from h2==3.*->httpcore==0.9.*->httpx==0.13.3->googletrans==4.0.0-rc1) (5.2.0)\n","Requirement already satisfied: hpack<4,>=3.0 in /usr/local/lib/python3.11/dist-packages (from h2==3.*->httpcore==0.9.*->httpx==0.13.3->googletrans==4.0.0-rc1) (3.0.0)\n","Requirement already satisfied: gTTS in /usr/local/lib/python3.11/dist-packages (2.5.4)\n","Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.11/dist-packages (from gTTS) (2.32.3)\n","Requirement already satisfied: click<8.2,>=7.1 in /usr/local/lib/python3.11/dist-packages (from gTTS) (8.1.8)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->gTTS) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->gTTS) (2.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->gTTS) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->gTTS) (2025.6.15)\n","Requirement already satisfied: IPython in /usr/local/lib/python3.11/dist-packages (7.34.0)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.11/dist-packages (from IPython) (75.2.0)\n","Requirement already satisfied: jedi>=0.16 in /usr/local/lib/python3.11/dist-packages (from IPython) (0.19.2)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.11/dist-packages (from IPython) (4.4.2)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.11/dist-packages (from IPython) (0.7.5)\n","Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.11/dist-packages (from IPython) (5.7.1)\n","Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from IPython) (3.0.51)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.11/dist-packages (from IPython) (2.19.2)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.11/dist-packages (from IPython) (0.2.0)\n","Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.11/dist-packages (from IPython) (0.1.7)\n","Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.11/dist-packages (from IPython) (4.9.0)\n","Requirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.11/dist-packages (from jedi>=0.16->IPython) (0.8.4)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.11/dist-packages (from pexpect>4.3->IPython) (0.7.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.11/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->IPython) (0.2.13)\n","Available target languages:\n","en: English\n","es: Spanish\n","fr: French\n","de: German\n","it: Italian\n","pt: Portuguese\n","ru: Russian\n","zh-cn: Chinese (Simplified)\n","ja: Japanese\n","ar: Arabic\n","hi: Hindi\n","Enter target language code (default is 'en' for English): hi\n","\n","Type 'quit' to exit\n","Enter text to translate: my name is srijan roy\n","Translation: मेरा नाम श्रीजन रॉय है\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.lib.display.Audio object>"],"text/html":["\n","                <audio  controls=\"controls\" autoplay=\"autoplay\">\n","                    <source src=\"data:audio/mpeg;base64,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5vXzPqWm39TIxWnQiVRSGBopUBH0UjBQABPg6x+1XaW1FXOMDDU48WCIcLWk0MGDRus+rWWBMEKEAgNbzeofmJPJ6hwlyW+kwVAA6WaRBydQiFzJDoiGHcXi0ZA1DeX3ZcsEweB8qXUqhz89//OExE0rU6KAAObavV+x/6rb///LvPxqVMrLstRcd5pU8U9LH/WS4TIN8tF0dxIBdRhDA2LowJTQTrZmXbv7IppMijPSYamibrt/////X/////0b2Ra6T/+ta3oTNad2NpPl3TgWtoN/6G+BSFXl/kvSoN75wMdwJfnwQIgJjX/x9goRmdLRjAAt9Q8wADMmqzVFIaKVru4BBUxsHEgByYupQj2gMYhLHScpr0CUlJLniguMYWdy2f7veX97+X////OExFIoe5qEAN7UvO//fabspvZUc0/ToxOB5cAqFYZgFwNmALAHgvBVGImicSCuRmnJe909tpqPz7TfX/b////////+q1/T/813Onmj2UHl7ACFqGpcVYgVG2OQ+klbSAuAmoJZ5pOgo788skMHA4TfyCYyFTA1dzNGHnsdoCDJnUKcgWPo7GYwCmOFoAHgMOPluDl1KEQ5dyjTbNpMSj+zcxDlTeNqx3//9f+963370ukz/u5QP9EbmVqvFAKJ//OExGMmc5qEAN7UvOLJhoMAvhUEII4XQljwfnKWRFS1f3pbotWv///////////XdHzv/9dFQ50OICJAgVF1ApTTR6KrNUsELtMJxMOIQGMOgYWaoOpgBA8MWQGL0QO8CaRhEQIj1mOBNRZuAgIwUBzpEWkjzPVOB0aUBYtZd1BoCC26VNRVwi/za2aKrhRublrlqrZ7+P50++b7MU3K09SxNguVmrhGq941SQWi4mCqIUPBCgpGxE5U1jUO1b/n//OExHwpI5J4AO6UvDrOmm22R9v////////+lNTHTOc3/+lNEc4hMLiEFywuATrTUDgF32a6fVvpCrEGACGD6Iuad4KYGA6Q4K0NdMAMAwwAQD1qyJ/GDAwAkBqTRajFoow4uexGWXZVDwrUO7L68eaaghfeDqGSSxKpzatLrbPq/e4bmqsW1Zzqxq9bw7KoPy1ne5lhzD/z5QucQIRIQDQF8FLs5NJlZiM4rW51m/pZP////////e1vfr19W//b//OExIonw4psAPYUvHRWdlNMKqDISDoDHRrRj2Ms9YhDy4zD7XEE5gHALGDqaaaTYaRgbgLgoAxHhNMKAJiwab9PLTUkcIgCJ2juF5EQsWyqxgOYC4Zk8XHL5AiseNjqhjxopF42NCAI1GJkcLx1CYkakxgyZNm5ipJGgeYyRM9543RWixuvNp2a6iTgQEFBAZ0KtWv/0//+z63Z08ir6uv/7aNQ5Kf///7+VpS+k6qFFpYMYcZCCmGjkUccir9L//OExJ4m4+ZoAPQE3DzMTAMBTA2vzXUjBIGXogNGYBBSYKgBN6yqy5yZ/tRqOQVKrd5bVc1wq2zTcCtvoiJvHeMj3N93s5UYPm7xsdRKRNR4cakNWRL4Qxkea2n1XAlZ4FJEMUbtgeRL7DhQEFFjmYPhYoHBofOhFc5k5J96owfOroRTuRhBlPZTv03tV//+5Lo1f7fkZX//+qPZp0szLGjFgsGwkAeympdRTaaoJBz1u8WtwxVLxtnGQoDDzcWu//OExLUnY8J0AOvK3MuoJxU1eCKOUxxusJfap2rFaaN28ZZKJVC71JJaeGH3Zw8Bb9424QI2J3H3xdxqkRibhvdSZoZpV7LrtkRsMwkBima4UhGqug1ts6M6byHVOZYNaTQ0ZUMizhUGgCAAAdtUysbWJ17IGMs9RN0PVrZDZFCWxkcjmNEthbGRPoBzTR2IlagqZhL+q3DKGIe6RxiG+lzgiqNVqFco6dvclyn8xy7syEK9TqZCC/qNuMhWN8Vv//OExMpHzBpwAN4e3Wprc40BWQ4OVe/V7+Oxvlcr9uDujqd5Zs1Agvps/NJl6JLMzud5KZpBZ3NkeMbVX0o83AY54dWyA8gx37qzgqlS3xpIMkV822YIlnkPv4d8QMURAxFV8e0FeBtHm4w7xntKZpT7/pjfq53//e8u5b5veX18/y5Go1XjlPLH/ilPLaDc5yS4wmtLpyVs0QDJkLNQObK88EsDd5+3Xqzr1rbSqcFaQWBJlzr3FBApZa4wEbqY//OExF0/DDKUAH4e3VYQONC4DEIEmjkPViLY3rSNIIPQhi4dIxpvALHAQaUU6vLYlE+Ww0DlVafUTgulQhafNNRv04bhJF9DDwVj9sVrkzvD/MuA2uajilzQuCuDoXZ1q9RnIsvULV6vhv47zUPMakCXETV7scO182mhz40/3d/HxJDfPK53eI8rAiv494dM2gPL13WBEs/xS9L1xAzJSJvwNvPuHan+b/wIiqr///5///+HV8WcaSTXP8QiaQs9//OExBMqo2K0AALevaaplpHDcaB3jtH1IrAeGrCiGnYKeQasL4yIlfGe3HQU6cQghK6Ot4fqPkY+YbuGzucWyoVjgmExGh+yJfq9jo4PGtxfWZoyw/c2Fwks5LUjJEw21iK+FFu/V92Sdba1Pt0wyxGu7NAZa0i3pCpBzE3bWs7h/ES2d4xF3r7paNTGPv3vrwczg3223qDWXEbWJAeVbv/6DT2ag//////89WdNRuzKhrD885VYbHkAlEcTHGFC//OExBsmm0a4AAnYvaODYqYOioPRGJCh2wOiUJg+Au+E5NHws3qS0y3lSoxOIkJUXVS05odH1Xae1ZGwniUHG1hysxZG1dNHEcry4s4+TElc41j0DFDutCW0wykRLFDD9Xb06q2udF0/TLPwRWibyaUY7q0tXIclXsfv0kfeMk71ktYojH0f737v5nO1n/////////zNW/QOnptZqz03pnz7k3EERmkgoLmEFDz5ufYZny0bCkRRwFAJwHR6Pg5A//OExDMme660AArQ3DidRSH2CELBsbNU5I4XVFNWYKEJC0Q/Uxhk2Oyiye7G7IecSNLE2oqSHBIjUkhFIuKirio0smRwjisDEazg5OgubHW5R4sQNtpR7Ol80hVD5rHTCP7d33/dQ937MU59EAvF22rYl9QxfnC08tff////lf1Cder5tNsELTjDIyvFEjxAaYQkx8MDZCDUizkIxaaIPiAVBrAMlgkJws+QjSEolgRdhbU7WcSsJtunDE/Miq3y//OExEwns6KwAApSvEnqLJzYxLUUnstvTgpeszpDkmE+rG5JzcQkTOtNywlRNGXuVgwjZpm566D+91o0NoozZRTYbZnH5P2s1X+3l56n/L57ypb+0wFs0DQkWKxZrfQitigYRRQwByafL///6+bmIa2zFhOD0G1H1C1029ImFSMIjJ45D0gB8AQjgmFMsrmIprbbrvHJshvEU5M2kczWYtWrIrrahW+tW3P7Zg5znEGR9vcHUa33Ctn43Wn38fGM//OExGAk0uKoABreuGs4xXVsRs0tb+19fcGLnF4ta+1tWtnFs71j+MDTzSzItIlgaHJLLYplaUopUwGsxfLTWqqrOxqeBCM+slAAgcprBwNNgZvFL+qljO011rZmc6em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8Srdmgj6+TSIYIEK0UUFHRox0tUueXth//OExBYtxBqUANvQ3Z6297HdZ7u1t1+vnU+/bMn3uExMmIT52b6rvPhOuDXHrRigue1IXKw8kjRPOU2beS+vCZdvXrgumlTJc7U7KxJFAWDoBYdIdHCCOIEcMFmKDcRAawLSHIijBZjmi4FrWVbKHCwt0cNrleLYWLNOKEZo4HkvF8MSpLfXcDe6hZWIKXri+IqVqVWNVyRU3hK9ef//////v5665V1vhmg2LBen5nSQ+kQZrEwQ+Fxtc4wYw7JD//OExBIpouqMAOPWuC0DIbpNKdussOomjscr5peBE1jeUMeYh9TGmz2s3DBJOqnp6ieipY4t7rxe4b9jjGcOBka2lDQiOt2geJxxbUKiec5kgyQWNKzMB0CIw7wZoPunkxlvRS5Pmg3E5rra2pbHp38X/trv///6bDpqvv/muv/uOJbv4PSCLRhkUSfqrZWPASwoA6tSUFAwVHuUVHeARSEqqy6ldJBCYLhICTMH0ztBYBmZ3uaICMXkN+IhAVIb//OExB4l+4KMAOPOvYxZTElR9c2Uyj/9j+bc7pzuL3WWAbIKw1q07Ec0Teuvng7tdm44ULbW9iXT+0DWoNM6zHPHJxpgrFw6OhGIwPwnuaxcxqDxh7SgWEkebPX+rqn////////9Oe517GOvd103S0eNQesg1JtBgrW1trSVjTWt5PyHebyHdxrj1siQxMC0MzaMUinlpAuDzJCHQPSscuYmh0SM1k9JcbyFEnn9OxqvecUL8yY8CU6jzvdUEyAP//OExDkmhCKMAOPO3Y3WnW6xp95oxIdDtAwpk8z7Rmk+xqx08itrehc9rwXT+LK9VsaBXW2u13PURxqSNLniA0nVCRHnHf///////////VvT/toeZoetTUU50zTtUShm1d3RUV6FUVUNONNjqqNJ5Lpjy7DBIHMqaU5OQx4VkQURhYsY6B7WWctkjc4YHDwQVVpRaZGgyq/MY+jyzjw0Us1gQB9j6LE3KtbJ8BmLEtVkeR859GRDma9NpwgyFaex//OExFImU6KAAOPOvYoxNS3IJ6xDtDlYH2GCoBJEascPCVag+QNNIiYKjQfBERVJjX1b///////////p///++u3/shhxw8cdKFJn64978l1rb/6VVUbmnoSgABphGLRttrht2QhgQBcesqLh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\" type=\"audio/mpeg\" />\n","                    Your browser does not support the audio element.\n","                </audio>\n","              "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Type 'quit' to exit\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-3-554049671.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     58\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\nType 'quit' to exit\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 60\u001b[0;31m     \u001b[0mtext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Enter text to translate: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     61\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mtext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'quit'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   1175\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1176\u001b[0m             )\n\u001b[0;32m-> 1177\u001b[0;31m         return self._input_request(\n\u001b[0m\u001b[1;32m   1178\u001b[0m             \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1179\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"shell\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   1217\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1219\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1220\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1221\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]}]}